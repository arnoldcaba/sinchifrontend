{"version":3,"sources":["webpack:///./src/components/CProyectosEstados.vue?44e8","webpack:///src/components/CProyectosEstados.vue","webpack:///./src/components/CProyectosEstados.vue?eeab","webpack:///./src/components/CProyectosEstados.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","on","$event","armaDataChart","_v","_s","formatearPorcentaje","totproyecto","items","scopedSlots","_u","key","fn","ref","item","drawChart","name","model","value","callback","$$v","seltrv","expression","directives","rawName","dataChart","titulo","staticRenderFns","component"],"mappings":"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","file":"js/chunk-2d225a13.a68784e6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',[_c('h1',{on:{\"click\":function($event){return _vm.armaDataChart()}}},[_vm._v(\"Total Proyecto: \"+_vm._s(_vm.formatearPorcentaje(_vm.totproyecto))+\" %\")]),_c('v-treeview',{attrs:{\"items\":_vm.items,\"activatable\":\"\",\"rounded\":true,\"open-on-click\":\"\",\"item-key\":\"id\"},scopedSlots:_vm._u([{key:\"label\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('a',{on:{\"click\":function($event){return _vm.drawChart(item)}}},[_vm._v(_vm._s(item.name))])]}}]),model:{value:(_vm.seltrv),callback:function ($$v) {_vm.seltrv=$$v},expression:\"seltrv\"}})],1),_c('v-col',[_c('chart',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.charvisible),expression:\"charvisible\"}],attrs:{\"data\":_vm.dataChart,\"titulo\":_vm.titulo},on:{\"update:data\":function($event){_vm.dataChart=$event},\"update:titulo\":function($event){_vm.titulo=$event}}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container fluid>\n      <v-row>\n          <v-col>\n            <h1 @click=\"armaDataChart()\">Total Proyecto: {{ formatearPorcentaje(totproyecto) }} %</h1>\t\n            <v-treeview                \n                :items=\"items\"\n                activatable\n                :rounded=\"true\"\n                v-model=\"seltrv\"               \n                open-on-click\n                item-key=\"id\"               \n            >\n            <template slot=\"label\" slot-scope=\"{ item }\">\n                <a @click=\"drawChart(item)\">{{ item.name }}</a>\n            </template>\n            </v-treeview>\n            <!--  selectable      \n                selected-color=\"primary\"\n                selection-type=\"independent\"       -->\n          </v-col>      \n          <v-col>\n               <chart :data.sync = \"dataChart\" :titulo.sync = \"titulo\" v-show=\"charvisible\"></chart> \n          </v-col>    \n      </v-row>   \n   \n  </v-container>    \n</template>\n\n<script>\nimport ProyectosService from \"../servicios/ProyectosService\"\n\nexport default {\n\n    name: 'EstadoProy',\n\n    components: {\n        'chart' : () => import('@/components/CChartCard.vue')       \t  \n    },\n\n    props: ['proyecto'],\n    data(){\n\n        return {\n            loading: false,\n            items:[],\n\n            objetivos:[],\n            productos:[],\n            actividades:[],\n\n            totproyecto:0,\n\n            dataChart:{\n                labels: [],\n                series: []                \n            },\n\n            seltrv: [],\n\n            titulo:'',\n\n            charvisible: 1\n        }\n    },\n\n    methods: {\n\n        traeData(){\n\n            var _this = this\n           \n            this.objetivos = []\n            this.productos = []\n            this.actividades = []\n            \n            ProyectosService.EstadoActual(this.proyecto)\n                .then(function(res) {\n\n                    if (res.request) {\n                                    \n                        if(res.data){\n\n                            _this.objetivos = res.data.objetivos \n                            _this.productos = res.data.productos\n                            _this.actividades = res.data.actividades\n                           \n                            var sumaA = _this.objetivos.reduce(function(sum, col) {\n\n                                return sum + col['total']\n                            }, 0)\n\n                            _this.totproyecto = sumaA\n\n                            _this.consolidar()\n                            _this.armaDataChart()\n\n                        }\n                    }                    \n                    \n            }).catch(function(err) {\n                    \n            })\n\n        },\n\n        consolidar(){\n\n            this.items = []\n\n            var array = []\n\n            for (let index = 0; index < this.objetivos.length; index++) {\n                const element = this.objetivos[index]\n\n                var codigo = element['objetivo']\n                var nombre = codigo + '.' + element['txtobjetivo'] + ' : Peso: ' + element['pesoobj'] + ' %' + '  TOTAL:' + this.formatearPorcentaje(element['total']) + ' %' \n\n                var hijproductos = []               \n                var hijactividades = []\n                var actualdata = []               \n\n                for (let i = 0; i < this.productos.length; i++) {\n                    const elementpro = this.productos[i]\n\n                    if(elementpro['proyobjcod'] == codigo){\n\n                        hijproductos.push({id: codigo + '.' + elementpro['producto'], name: codigo + '.' + elementpro['producto'] + '.' + elementpro['txtproducto'] + ' : Peso: ' + elementpro['pesoprod'] + \n                                            ' %' + ' :  TOTAL: ' + this.formatearPorcentaje(elementpro['total']) + ' %'})\n\n                        hijactividades = []                        \n\n                        for (let j = 0; j < this.actividades.length; j++) {\n                            const elementact = this.actividades[j];\n\n                            if(elementpro['proyobjcod'] == elementact['proyobjcod'] && elementpro['producto'] == elementact['prodcod']){\n\n                                hijactividades.push({id: codigo + '.' + elementpro['producto'] + '.' + elementact['actividad'], name: codigo + '.' + elementpro['producto'] + '.' + elementact['codigo'] + '.' + elementact['txtactividad'] + ' : Peso: ' + elementact['pesoact'] + \n                                            ' %' + ' :   TOTAL: ' + this.formatearPorcentaje(elementact['total']) + ' %'})\n\n                            }                            \n                        }\n\n                        if (hijactividades.length > 0){\n                            \n                            actualdata.push({   id: codigo + '.' + elementpro['producto'], name: codigo + '.' + elementpro['producto'] + '.' + elementpro['txtproducto'] + ' : Peso: ' + elementpro['pesoprod'] + \n                                                    ' %' + ' :   TOTAL: ' + this.formatearPorcentaje(elementpro['total']) + ' %',\n                                                children:  hijactividades\n                                            })                            \n\n                        } else {\n                            \n                            actualdata.push({   id: codigo + '.' + elementpro['producto'], name: codigo + '.' + elementpro['producto'] + '.' + elementpro['txtproducto'] + ' : Peso: ' + elementpro['pesoprod'] + \n                                                    ' %' + ' :   TOTAL: ' + this.formatearPorcentaje(elementpro['total']) + ' %'\n                                            })\n\n                        }\n                    }\n                    \n                }\n                \n                if(hijproductos.length > 0){\n                    \n                    \n                    array.push({id: codigo, name: nombre,\n                         \n                                children: actualdata\n\n                            })\n\n                } else {\n\n                    array.push({id: codigo, name: nombre})\n                }\n                \n            }\n\n            this.items = array\n\n        },\n\n        armaDataChart(Nivel=0,Codigo=0){\n\n            var series = []\n            var labels = []\n            var array = []\n            var arrayGen = []\n\n            var nomcampo = '' \n\n            if (Nivel==0){\n\n                nomcampo = 'objetivo' \n                arrayGen = this.objetivos //.reverse()\n\n            } else if (Nivel==1){\n\n                nomcampo = 'producto' \n                arrayGen = this.productos //.reverse()\n\n            } else if(Nivel==2){\n\n                nomcampo = 'actividad'\n                arrayGen = this.actividades //.reverse()\n\n            }\n            \n            if(Codigo != 0) {\n\n                for (let index = 0; index < arrayGen.length; index++) {\n                    const element = arrayGen[index];\n\n                    if(Nivel == 1){\n\n                        if(element.proyobjcod == Codigo)\n                            array.push(element)\n\n                    } else if(Nivel == 2){\n\n                        let arrayCodigos = Codigo.split('.')\n\n                        if(element.proyobjcod == arrayCodigos[0] && element.prodcod == arrayCodigos[1])\n                            array.push(element)\n                    }\n                }                \n            }    \n\n            else    \n                array = arrayGen \n\n            if(array.length > 0){\n\n                for (let index = 0; index < array.length; index++) {\n                    \n                    const element = array[index]\n\n                    let nombrelbl = ''\n\n                    if(nomcampo == 'objetivo'){\n                        nombrelbl = element[nomcampo]\n                        this.titulo = 'OBJETIVOS'\n\n                    } else if (nomcampo == 'producto'){\n                        nombrelbl = element['proyobjcod'] + '.' + element['producto'] + '.'\n                        this.titulo = 'PRODUCTOS'\n\n                    } else if (nomcampo == 'actividad'){\n                        nombrelbl = element['proyobjcod'] + '.' + element['prodcod'] + '.' + element['codigo'] + '.' \n                        this.titulo = 'ACTIVIDADES'   \n                    }\n                    let nombre = nombrelbl\n                    let valor = element['total']\n\n                    labels.push(nombre)\n                    series.push(valor)\n\n                }\n\n                this.dataChart.labels = labels\n                this.dataChart.series[0] = series\n            } else {\n\n                this.dataChart.labels = []\n                this.dataChart.series[0] = []\n\n            }\n        },\n        \n        drawChart(item) {\n\n            let codigoactual = item.id\n            let total = 0\n\n            var codigo = 0\n\n            for(var i = 0; i < codigoactual.length; i++) {\n                if (codigoactual[i] == \".\") \n                    total++\n            }\n            \n            if(total == 0){\n\n                codigo = 0                   \n\n            } else {\n\n                codigo = codigoactual\n\n            }\n\n            if(item.children == undefined){\n\n                this.dataChart.labels = []\n                this.dataChart.series[0] = []\n\n                this.charvisible = 0\n\n            } else {\n\n                this.charvisible = 1\n                this.armaDataChart(total + 1,codigo)\n\n            }            \n\n        },\n        \n        formatearPorcentaje(valor){\n\n            var NuevoVal = parseFloat(valor).toFixed(2)\n            var valorTxt = NuevoVal.toString().replace(\".\", \",\")\n\n            return valorTxt\n        }\n\n    },\n\n    watch: {\n\n        proyecto: function (val) {\n\n            if(val!=0){  \n\n                this.traeData()            \n              \n            }\n        },\n    },\n        \n    mounted() {        \n        \n        this.traeData()\n    },\n}\n\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CProyectosEstados.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CProyectosEstados.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CProyectosEstados.vue?vue&type=template&id=08e2bc81&\"\nimport script from \"./CProyectosEstados.vue?vue&type=script&lang=js&\"\nexport * from \"./CProyectosEstados.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}